/*
 * NormalizeEditor.java
 *
 * Created on 17. November 2003, 14:19
 */

package de.cismet.cids.admin.importAnt.gui;
import de.cismet.cids.admin.importAnt.castorGenerated.*;
import java.util.Enumeration;
import java.io.*;
import javax.swing.table.*;
import de.cismet.common.gui.misc.*;
import java.util.*;
import javax.swing.*;
import java.awt.event.*;
import de.cismet.cids.tools.gui.farnsworth.*;
/**
 *
 * @author  hell
 */
public class OptionsEditor extends javax.swing.JPanel {
    private final org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(this.getClass());

    /** Creates new form NormalizeEditor */
    public OptionsEditor() {
        initComponents();
    }

    LinkedHashMap  normalizeOptions = new LinkedHashMap();

    public void setTables(String[] arr) {
        if (arr==null) arr=new String[0];
        normalizeOptions=new LinkedHashMap();
        panNormalize.removeAll();
        java.awt.GridBagConstraints gridBagConstraints;
        for (int i=0; i< arr.length; ++i) {
            JCheckBox c=new JCheckBox();
            c.setText(arr[i]);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = i;
            panNormalize.add(c, gridBagConstraints);
            normalizeOptions.put(c.getText(), c);
        }
        revalidate();
    }

    public void setContent(Options options) {
        if (options!=null) {
            Enumeration enum_ =options.enumerateNormalize();
            while (enum_.hasMoreElements()) {
                String name=enum_.nextElement().toString();
                if (normalizeOptions.containsKey(name)) {
                    ((JCheckBox)(normalizeOptions.get(name))).setSelected(true);
                }
                else {
                    log.error("Tabelle nicht im OptionsKatalog obwohl in XML-Datei");
                }
            }
        }
        else {
            setTables(null);
        }
    }

    public void setContent(RuntimeProps runtimeProps) {
        if (runtimeProps!=null) {
            if (runtimeProps.getFinalizer()!=null) {
                this.txtFinalizeClass.setText(runtimeProps.getFinalizer().getClassName());
                this.txtDirTempClasses.setText(runtimeProps.getTmpDir());
                this.chkNoTempDelete.setSelected(runtimeProps.getKeepCode());
                Enumeration enum_=runtimeProps.getFinalizer().enumerateProp();
                this.txtFinalizeParam.setText("");
                while (enum_.hasMoreElements()) {
                    Prop p=((Prop)enum_.nextElement());
                    this.txtFinalizeParam.append(p.getKey()+"="+p.getContent()+"\n");
                }
                this.txtFinalizeParam.setText(txtFinalizeParam.getText().trim());
                txtFinalizeParam.setCaretPosition(0);
            }
        }
        else {
            this.txtFinalizeClass.setText("");
            this.txtDirTempClasses.setText("");
            this.chkNoTempDelete.setSelected(false);
            this.txtFinalizeParam.setText("");
        }
    }

    public void setContent(Options options,RuntimeProps runtimeProps) {
        setContent(options);
        setContent(runtimeProps);
    }

    public Options getOptionsContent() {
       Options o=new Options();
       Iterator it=normalizeOptions.keySet().iterator();
       while (it.hasNext()) {
           JCheckBox c= ((JCheckBox)(normalizeOptions.get((String)it.next())));
           if (c.isSelected()) {
               o.addNormalize(c.getText());
           }
       }

       return o;
    }
    public RuntimeProps getRuntimePropsContent() {
        RuntimeProps p=new RuntimeProps();
        p.setKeepCode(this.chkNoTempDelete.isSelected());
        p.setTmpDir(this.txtDirTempClasses.getText());

        de.cismet.cids.admin.importAnt.castorGenerated.Finalizer f=new de.cismet.cids.admin.importAnt.castorGenerated.Finalizer();
        f.setClassName(this.txtFinalizeClass.getText());

        String tParam=this.txtFinalizeParam.getText().trim();
        String[] tp=tParam.split("\n");
        for (int i=0; i< tp.length;++i) {
            String[] keyValue=tp[i].split("=");
            if (keyValue.length!=2) {
                continue;
            }
            Prop prop=new Prop();
            prop.setKey(keyValue[0]);
            prop.setContent(keyValue[1]);
            f.addProp(prop);
        }
        p.setFinalizer(f);
        return p;
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panNormalizeTitle = new javax.swing.JPanel();
        sepFunctions = new javax.swing.JSeparator();
        lblFunctions = new javax.swing.JLabel();
        panNormalize = new javax.swing.JPanel();
        panOptions = new javax.swing.JPanel();
        panProps = new javax.swing.JPanel();
        panPropsTitle = new javax.swing.JPanel();
        lblPropsTitle = new javax.swing.JLabel();
        sepPropsTitle = new javax.swing.JSeparator();
        chkNoTempDelete = new javax.swing.JCheckBox();
        lblDirTmpClasses = new javax.swing.JLabel();
        txtDirTempClasses = new javax.swing.JTextField();
        cmdDirTempClasses = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        panFinalizeTitle = new javax.swing.JPanel();
        lnlFinalizeTitle = new javax.swing.JLabel();
        sepFinalizeTitle = new javax.swing.JSeparator();
        lblFinalizeParam = new javax.swing.JLabel();
        lblFinalizeClass = new javax.swing.JLabel();
        txtFinalizeClass = new javax.swing.JTextField();
        cmdFinalizeClass = new javax.swing.JButton();
        txtFinalizeParam = new javax.swing.JTextArea();

        setLayout(new java.awt.GridBagLayout());

        panNormalizeTitle.setLayout(new java.awt.GridBagLayout());

        panNormalizeTitle.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 10, 10, 10)));
        sepFunctions.setMinimumSize(new java.awt.Dimension(1, 2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(9, 0, 10, 0);
        panNormalizeTitle.add(sepFunctions, gridBagConstraints);

        lblFunctions.setForeground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        lblFunctions.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/admin/res/search_remall.gif")));
        lblFunctions.setText("Normalisieren");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(9, 0, 10, 5);
        panNormalizeTitle.add(lblFunctions, gridBagConstraints);

        panNormalize.setLayout(new java.awt.GridBagLayout());

        panNormalize.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 20, 10, 10)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        panNormalizeTitle.add(panNormalize, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        add(panNormalizeTitle, gridBagConstraints);

        panOptions.setLayout(new java.awt.GridBagLayout());

        panOptions.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 10, 10, 10)));
        panProps.setLayout(new java.awt.GridBagLayout());

        panPropsTitle.setLayout(new java.awt.GridBagLayout());

        lblPropsTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/admin/res/prop_ps.gif")));
        lblPropsTitle.setText("Grundeinstellungen");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        panPropsTitle.add(lblPropsTitle, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        panPropsTitle.add(sepPropsTitle, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panProps.add(panPropsTitle, gridBagConstraints);

        chkNoTempDelete.setText("Tempor\u00e4re Klassen nicht l\u00f6schen");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panProps.add(chkNoTempDelete, gridBagConstraints);

        lblDirTmpClasses.setText("Verzeichniss f\u00fcr tempor\u00e4re Klassen");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panProps.add(lblDirTmpClasses, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panProps.add(txtDirTempClasses, gridBagConstraints);

        cmdDirTempClasses.setText("...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panProps.add(cmdDirTempClasses, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panOptions.add(panProps, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        panFinalizeTitle.setLayout(new java.awt.GridBagLayout());

        lnlFinalizeTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/cismet/cids/admin/res/final_co.gif")));
        lnlFinalizeTitle.setText("Finalizer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        panFinalizeTitle.add(lnlFinalizeTitle, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        panFinalizeTitle.add(sepFinalizeTitle, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(panFinalizeTitle, gridBagConstraints);

        lblFinalizeParam.setText("Parameter");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblFinalizeParam, gridBagConstraints);

        lblFinalizeClass.setText("Klasse");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(lblFinalizeClass, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(txtFinalizeClass, gridBagConstraints);

        cmdFinalizeClass.setText("...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(cmdFinalizeClass, gridBagConstraints);

        txtFinalizeParam.setRows(5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(txtFinalizeParam, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panOptions.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(panOptions, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkNoTempDelete;
    private javax.swing.JButton cmdDirTempClasses;
    private javax.swing.JButton cmdFinalizeClass;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblDirTmpClasses;
    private javax.swing.JLabel lblFinalizeClass;
    private javax.swing.JLabel lblFinalizeParam;
    private javax.swing.JLabel lblFunctions;
    private javax.swing.JLabel lblPropsTitle;
    private javax.swing.JLabel lnlFinalizeTitle;
    private javax.swing.JPanel panFinalizeTitle;
    private javax.swing.JPanel panNormalize;
    private javax.swing.JPanel panNormalizeTitle;
    private javax.swing.JPanel panOptions;
    private javax.swing.JPanel panProps;
    private javax.swing.JPanel panPropsTitle;
    private javax.swing.JSeparator sepFinalizeTitle;
    private javax.swing.JSeparator sepFunctions;
    private javax.swing.JSeparator sepPropsTitle;
    private javax.swing.JTextField txtDirTempClasses;
    private javax.swing.JTextField txtFinalizeClass;
    private javax.swing.JTextArea txtFinalizeParam;
    // End of variables declaration//GEN-END:variables



    public static void main (String[] args) throws Exception{
        FileReader r=new FileReader("C:\\importTest.xml");
        // aus dem XML File die entsprechende Datenstruktur machen (CASTOR)
        ImportRules impRules=ImportRules.unmarshal(r);
        Options o=impRules.getOptions();
        javax.swing.JFrame frame = new javax.swing.JFrame("SwingApplication");

        String[] lala=new String[]{"Url","Url_Base","COORDINATE","Altablagerungen","TEST"};
        OptionsEditor t=new OptionsEditor();
        t.setTables(lala);
        t.setContent(o,null);

        frame.getContentPane().add(t);

        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                System.exit(0);
            }
        });



        //Finish setting up the frame, and show it.
        frame.pack();
        frame.setVisible(true);



    }

}
