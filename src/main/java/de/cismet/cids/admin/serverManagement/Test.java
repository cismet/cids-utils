/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * JFrame.java
 *
 * Created on 1. M\u00E4rz 2004, 15:12
 */
package de.cismet.cids.admin.serverManagement;
//de.cismet.cids.admin.serverWrapper.Test
/**
 * DOCUMENT ME!
 *
 * @author   hell
 * @version  $Revision$, $Date$
 */
public class Test extends javax.swing.JFrame {

    //~ Instance fields --------------------------------------------------------

    long start = System.currentTimeMillis();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkError;
    private javax.swing.JButton cmdTest;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form JFrame.
     */
    public Test() {
        initComponents();
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    private void initComponents() { //GEN-BEGIN:initComponents
        cmdTest = new javax.swing.JButton();
        chkError = new javax.swing.JCheckBox();

        addWindowListener(new java.awt.event.WindowAdapter() {

                @Override
                public void windowClosing(final java.awt.event.WindowEvent evt) {
                    exitForm(evt);
                }
            });

        cmdTest.setIcon(new javax.swing.ImageIcon(
                "C:\\Dokumente und Einstellungen\\hell\\Desktop\\navigator img\\graphite\\navigator_icon.gif"));
        cmdTest.setText("Ausgabe Sim");
        cmdTest.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    cmdTestActionPerformed(evt);
                }
            });

        getContentPane().add(cmdTest, java.awt.BorderLayout.CENTER);

        chkError.setText("Error");
        getContentPane().add(chkError, java.awt.BorderLayout.SOUTH);

        pack();
    } //GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void cmdTestActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_cmdTestActionPerformed
        System.out.println(new java.util.Date(System.currentTimeMillis() - start));
    }                                                                           //GEN-LAST:event_cmdTestActionPerformed

    /**
     * Exit the Application.
     *
     * @param  evt  DOCUMENT ME!
     */
    private void exitForm(final java.awt.event.WindowEvent evt) { //GEN-FIRST:event_exitForm
        // this.dispose();
    } //GEN-LAST:event_exitForm
    /**
     * DOCUMENT ME!
     *
     * @throws  Sirius.server.ServerExitError  DOCUMENT ME!
     * @throws  Sirius.server.ServerExit       DOCUMENT ME!
     */
    private void lala() throws Sirius.server.ServerExitError, Sirius.server.ServerExit {
        if (this.chkError.isSelected()) {
            throw new Sirius.server.ServerExitError();
        } else {
            throw new Sirius.server.ServerExit();
        }
    }

    /**
     * DOCUMENT ME!
     *
     * @param   args  the command line arguments
     *
     * @throws  Sirius.server.ServerExitError  DOCUMENT ME!
     * @throws  Sirius.server.ServerExit       DOCUMENT ME!
     */
    public static void main(final String[] args) throws Sirius.server.ServerExitError, Sirius.server.ServerExit {
//        String[] s=new String[0];
//        System.out.println(s[0]);
//
        final Test t = new Test();
        try {
            java.lang.Thread.sleep(5000);
        } catch (Exception e) {
        }
        t.show();
        System.out.println("DA BIN ICH");
        try {
            java.lang.Thread.sleep(3000);
        } catch (Exception e) {
        }
        System.out.println("etwas sp\u00E4ter");
    }
    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    public Test getServerInstance() {
        return this;
    }

    /**
     * DOCUMENT ME!
     */
    public void shutdown() {
        System.out.println("shutdown");
    }
}
